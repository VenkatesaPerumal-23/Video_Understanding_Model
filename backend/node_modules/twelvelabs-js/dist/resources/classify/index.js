"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Classify = void 0;
const Models = __importStar(require("../../models/index.js"));
const resource_1 = require("../../resource.js");
const util_1 = require("../../util.js");
class Classify extends resource_1.APIResource {
    async videos({ conversationOption = 'semantic', ...restBody }, options = {}) {
        const _body = (0, util_1.convertKeysToSnakeCase)({
            ...restBody,
            conversationOption,
        });
        const res = await this._post('classify', (0, util_1.removeUndefinedValues)(_body), options);
        return new Models.ClassifyPageResult(this, res);
    }
    async index({ conversationOption = 'semantic', ...restBody }, options = {}) {
        const _body = (0, util_1.convertKeysToSnakeCase)({
            ...restBody,
            conversationOption,
        });
        const res = await this._post('classify/bulk', (0, util_1.removeUndefinedValues)(_body), options);
        return new Models.ClassifyPageResult(this, res);
    }
    async byPageToken(pageToken, options = {}) {
        const res = await this._get(`classify/${pageToken}`, {}, options);
        return new Models.ClassifyPageResult(this, res);
    }
}
exports.Classify = Classify;
//# sourceMappingURL=index.js.map